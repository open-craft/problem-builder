version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.14
    parallelism: 4
    steps:
      - checkout
#      - restore_cache:
#          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -U pip wheel
            pip install -e git://github.com/edx/xblock-sdk.git@bddf9f4a2c6e4df28a411c8f632cc2250170ae9d#egg=xblock-sdk
            pip install -r requirements.txt
            pip install -r venv/src/xblock-sdk/requirements/base.txt
            pip install -r venv/src/xblock-sdk/requirements/test.txt
            pip uninstall -y xblock-problem-builder && python setup.py sdist && pip install dist/xblock-problem-builder-*.tar.gz
            pip install -r test_requirements.txt
            mkdir var
#      - save_cache:
#          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt" }}
#          paths:
#            - "venv"
      - run:
          name: Install firefox 38.0.5
          command: |
            FIREFOX_URL="https://sourceforge.net/projects/ubuntuzilla/files/mozilla/apt/pool/main/f/firefox-mozilla-build/firefox-mozilla-build_38.0.5-0ubuntu1_amd64.deb/download" \
            && sudo apt-get update \
            && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL \
            && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install  \
            && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 libgtk2.0-0 \
            && rm -rf /tmp/firefox.deb \
            && firefox --version
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            if [ $CIRCLE_NODE_INDEX = '0' ]; then pep8 problem_builder --max-line-length=120; fi
            if [ $CIRCLE_NODE_INDEX = '1' ]; then pylint problem_builder --disable=all --enable=function-redefined,undefined-variable,unused-import,unused-variable; fi
            TESTFILES=$(circleci tests glob "problem_builder/v1/tests/**/*.py" "problem_builder/tests/**/*.py"| circleci tests split)
            xvfb-run --server-args="-screen 0 1280x1024x24" python run_tests.py ${TESTFILES}

  deploy:
    docker:
      - image: circleci/python:2.7.14
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "setup.py" }}
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -U pip twine wheel
      - save_cache:
          key: dependencies-{{ checksum "circle.yml" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: Verify commit is tagged and tag matches version
          command: |
            . venv/bin/activate
            python setup.py verify_tag
      - run:
          name: Initialize .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = opencraft" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: Upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
