[tox]
envlist = py38-django32,quality

[pycodestyle]
exclude = .git,.tox,migrations
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D215 = Section underline is over-indented (numpy style)
; D404 = First word of the docstring should not be This (numpy style)
; D405 = Section name should be properly capitalized (numpy style)
; D406 = Section name should end with a newline (numpy style)
; D407 = Missing dashed underline after section (numpy style)
; D408 = Section underline should be in the line following the section's name (numpy style)
; D409 = Section underline should match the length of its name (numpy style)
; D410 = Missing blank line after section (numpy style)
; D411 = Missing blank line before section (numpy style)
; D412 = No blank lines allowed between a section header and its content (numpy style)
; D413 = Missing blank line after last section (numpy style)
; D414 = Section has no content (numpy style)
ignore = D101,D200,D203,D212,D215,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = problem_builder.settings
addopts = --cov problem_builder --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements site-packages
filterwarnings =
    ignore::DeprecationWarning

[testenv]
allowlist_externals =
    mkdir
deps =
    django32: Django>=3.2,<4.0
    -r{toxinidir}/requirements/test.txt
commands =
    mkdir -p var
    python manage.py check
    pytest --ignore=problem_builder/tests/integration {posargs:problem_builder --cov problem_builder}

[testenv:integration]
allowlist_externals =
    mkdir
    make
    xvfb-run
deps =
    -r{toxinidir}/requirements/workbench.txt
setenv =
    PATH = external{:}external/firefox{:}{env:PATH}
    WORKBENCH_DATABASES = \{"default": \{"ENGINE": "django.db.backends.mysql", "NAME": "db", "USER": "root", "PASSWORD": "rootpw", "HOST": "127.0.0.1", "PORT": "3307"\}\}
commands =
    mkdir -p var
    make install_firefox
    xvfb-run pytest {posargs:problem_builder/tests/integration}

[testenv:quality]
allowlist_externals =
    make
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    # TODO: Add setup.py after updating pylintrc with `edx-lint write`.
    pylint problem_builder manage.py
    pycodestyle problem_builder manage.py setup.py
    ; pydocstyle problem_builder manage.py setup.py
    isort --check-only --diff tests problem_builder manage.py setup.py
    make selfcheck
